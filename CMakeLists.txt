cmake_minimum_required(VERSION 3.5)
project(ZenUnit)
include(${CMAKE_SOURCE_DIR}/ZenUnitTestedProgram/CMakeMacros.cmake)

set(CMAKE_CONFIGURATION_TYPES Debug;Release;RelWithDebInfo)

if(UNIX)
   set(CMAKE_CXX_FLAGS "-std=c++14 -Wall -Wextra -Werror -pthread")
   if(${CMAKE_CXX_COMPILER_ID} STREQUAL "Clang")
      append(CMAKE_CXX_FLAGS "-pedantic -Wno-gnu-zero-variadic-macro-arguments")
   endif()
   option(AddressSanitizerMode "Appends -fsanitize=address" OFF)
   option(ClangCoverageMode "Appends -fcoverage-mapping and -fprofile-instr-generate=coverage.profraw" OFF)
   option(ClangTidyMode "Sets CMAKE_EXPORT_COMPILE_COMMANDS to ON" OFF)
   if(AddressSanitizerMode)
      append(CMAKE_CXX_FLAGS "-fsanitize=address")
      message("-fsanitize=address appended to CMAKE_CXX_FLAGS")
   elseif(ClangCoverageMode)
      append(CMAKE_CXX_FLAGS "-fcoverage-mapping -fprofile-instr-generate=coverage.profraw")
      message("-fcoverage-mapping and -fprofile-instr-generate=coverage.profraw appended to CMAKE_CXX_FLAGS")
   elseif(ClangTidyMode)
      set(CMAKE_EXPORT_COMPILE_COMMANDS ON)
      message("clang-tidy mode enabled: CMAKE_EXPORT_COMPILE_COMMANDS=ON")
   endif()
elseif(MSVC)
   set(CMAKE_CXX_FLAGS "/Wall /WX /EHsc /MP")
   replace(CMAKE_EXE_LINKER_FLAGS_DEBUG "/debug" "/debug:fastlink")
   replace(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO "/debug" "/debug:fastlink")
   set_property(GLOBAL PROPERTY USE_FOLDERS ON)
endif()

add_subdirectory(ZenUnit)
add_subdirectory(ZenUnit.Test)
add_subdirectory(Examples)
add_subdirectory(Examples.Test)

set(CMAKE_SKIP_INSTALL_ALL_DEPENDENCY true)
