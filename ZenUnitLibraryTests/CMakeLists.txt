cmake_minimum_required(VERSION 3.2)
project(ZenUnitLibraryTests)
include(${CMAKE_SOURCE_DIR}/CMakeMacros.cmake)

set(CMAKE_INCLUDE_CURRENT_DIR ON)
include_directories(${CMAKE_SOURCE_DIR})
include_directories(${ZenUnitIncludeDirectory})
include_directories(${ZenMockIncludeDirectory})
if(EXISTS ${GoogleBenchmarkIncludeDirectory})
   include_directories(${GoogleBenchmarkIncludeDirectory})
endif()

folder_source_group(Anomaly)
folder_source_group(Args)
folder_source_group_subfolder(Args Mock)
folder_source_group(Console)
folder_source_group_subfolder(Console Mock)
folder_source_group(Equalizers)
folder_source_group(Random)
folder_source_group(Registration)
folder_source_group(Results)
folder_source_group_subfolder(Results Mock)
folder_source_group(TestRunners)
folder_source_group_subfolder(TestRunners Mock)
folder_source_group(Tests)
folder_source_group_subfolder(Tests Mock)
folder_source_group(ToStringer)
folder_source_group_subfolder(ToStringer ZenUnitPrinter)
folder_source_group_subfolder(ToStringer SFINAE)

source_group("" FILES ZenUnitLibraryTestsMain.cpp pch.h pch.cpp)
file(GLOB_RECURSE Sources *.h *.cpp)

add_executable(ZenUnitLibraryTests ${Sources})
target_link_libraries(ZenUnitLibraryTests ZenUnitTestUtils)

if(EXISTS ${GoogleBenchmarkIncludeDirectory})
   target_link_libraries(ZenUnitLibraryTests ${GoogleBenchmarkLibraryPath})
   if(WIN32)
      target_link_libraries(ZenUnitLibraryTests shlwapi)
   endif()
endif()

EnablePrecompiledHeaders()
IfMSVCAddRunTestsPostBuildStep()
