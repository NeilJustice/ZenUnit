cmake_minimum_required(VERSION 3.2)
project(ZenUnitLibraryTests)
include(${CMAKE_SOURCE_DIR}/CMakeMacros.cmake)

set(CMAKE_INCLUDE_CURRENT_DIR ON)
include_directories(${CMAKE_SOURCE_DIR})
include_directories(${ZenUnitIncludeDirectory})
include_directories(${ZenMockIncludeDirectory})
if(EXISTS ${GoogleBenchmarkIncludeDirectory})
   include_directories(${GoogleBenchmarkIncludeDirectory})
endif()

folder_source_group_subfolder(Components Args)
folder_source_group_subsubfolder(Components Args ZenMock)
folder_source_group_subfolder(Components Console)
folder_source_group_subsubfolder(Components Console ZenMock)
folder_source_group_subfolder(Components TestRunners)
folder_source_group_subsubfolder(Components TestRunners ZenMock)
folder_source_group_subfolder(Components Tests)
folder_source_group_subsubfolder(Components Tests ZenMock)
folder_source_group_subfolder(Components TestResults)
folder_source_group(Constants)
folder_source_group_subfolder(ValueTypes Anomaly)
folder_source_group_subfolder(ValueTypes Args)
folder_source_group_subsubfolder(ValueTypes Args ZenMock)
folder_source_group_subfolder(ValueTypes Console)
folder_source_group_subfolder(ValueTypes TestResults)
folder_source_group_subsubfolder(ValueTypes TestResults ZenMock)
folder_source_group_subfolder(ValueTypes Tests)
folder_source_group_subfolder(StaticComponents ToStringer)
folder_source_group_subsubfolder(StaticComponents ToStringer ZenUnitPrinter)
folder_source_group_subsubfolder(StaticComponents ToStringer SFINAE)
folder_source_group_subfolder(ZenUnit Equalizers)
folder_source_group_subfolder(ZenUnit Random)

source_group("" FILES ZenUnitLibraryTestsMain.cpp pch.h pch.cpp)
file(GLOB_RECURSE Sources *.h *.cpp)

add_executable(ZenUnitLibraryTests ${Sources})
target_link_libraries(ZenUnitLibraryTests ZenUnitTestUtils)

if(UNIX)
   target_link_libraries(ZenUnitLibraryTests stdc++fs)
endif()

if(EXISTS ${GoogleBenchmarkIncludeDirectory})
   target_link_libraries(ZenUnitLibraryTests ${GoogleBenchmarkLibraryPath})
   if(WIN32)
      target_link_libraries(ZenUnitLibraryTests shlwapi)
   endif()
endif()

EnablePrecompiledHeaders()
IfMSVCAddRunTestsPostBuildStep()
