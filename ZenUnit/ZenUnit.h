#pragma once

#ifdef _WIN32
#define WIN32_LEAN_AND_MEAN
#define NOGDI
#define NOMINMAX
#include "Windows.h"
#endif

#ifndef INLINE
#define INLINE inline
#endif

#include "Anomaly/Anomaly.h"
#include "Anomaly/Anomaly.cpp"
#include "Anomaly/EqualizerException.h"

#include "Args/ArgsParser.h"
#include "Args/ArgsParser.cpp"
#include "Args/RunFilter.h"
#include "Args/RunFilter.cpp"
#include "Args/RunFilterParser.h"
#include "Args/RunFilterParser.cpp"
#include "Args/ZenUnitArgs.h"
#include "Args/ZenUnitArgs.cpp"

#include "Console/Console.h"
#include "Console/Console.cpp"
#include "Console/ConsoleColorer.h"
#include "Console/ConsoleColorer.cpp"
#include "Console/LinuxColor.h"
#include "Console/LinuxColor.cpp"
#include "Console/WindowsColor.h"
#include "Console/WindowsColor.cpp"

#include "Enums/Color.h"
#include "Enums/ExpectedActualFormat.h"
#include "Enums/PrintMode.h"
#include "Enums/TestOutcome.h"
#include "Enums/TestPhase.h"

#include "Equalizers/MapEqualizer.h"
#include "Equalizers/VectorEqualizer.h"
#include "Equalizers/ZenUnitEqualizer.h"
#include "Equalizers/ZenUnitEqualizer.cpp"

#include "Macros/ARE_COPIES.h"
#include "Macros/ARE_EQUAL.h"
#include "Macros/ARE_NOT_SAME.h"
#include "Macros/ARE_SAME.h"
#include "Macros/ARRAY_WAS_NEWED.h"
#include "Macros/DOES_CONTAIN.h"
#include "Macros/EQUALIZER_THROWS.h"
#include "Macros/EQUALIZER_THROWS.cpp"
#include "Macros/FAIL.h"
#include "Macros/IS_EMPTY.h"
#include "Macros/IS_FALSE.h"
#include "Macros/IS_NOT_NULL.h"
#include "Macros/IS_NULL.h"
#include "Macros/IS_TRUE.h"
#include "Macros/IS_ZERO.h"
#include "Macros/MacroUtils.h"
#include "Macros/MAPS_EQUAL.h"
#include "Macros/MAPS_EQUAL.cpp"
#include "Macros/NOTHROWS.h"
#include "Macros/PAIRS_EQUAL.h"
#include "Macros/POINTEES_EQUAL.h"
#include "Macros/POINTEES_EQUAL.cpp"
#include "Macros/POINTER_WAS_NEWED.h"
#include "Macros/REGEX_MATCHES.h"
#include "Macros/SETS_EQUAL.h"
#include "Macros/STD_FUNCTION_TARGETS.h"
#include "Macros/TestClassMacros.h"
#include "Macros/THROWS.h"
#include "Macros/VECTORS_EQUAL.h"
#include "Macros/VECTORS_EQUAL.cpp"

#include "Results/AnomalyOrException.h"
#include "Results/AnomalyOrException.cpp"
#include "Results/CallResult.h"
#include "Results/CallResult.cpp"
#include "Results/TestClassResult.h"
#include "Results/TestClassResult.cpp"
#include "Results/TestFailureNumberer.h"
#include "Results/TestFailureNumberer.cpp"
#include "Results/TestPhaseSuffixer.h"
#include "Results/TestPhaseSuffixer.cpp"
#include "Results/TestResult.h"
#include "Results/TestResult.cpp"
#include "Results/TestResultFactory.h"
#include "Results/TestResultFactory.cpp"
#include "Results/TestRunResult.h"
#include "Results/TestRunResult.cpp"

#include "TestRunners/MachineNameGetter.h"
#include "TestRunners/MachineNameGetter.cpp"
#include "TestRunners/MultiTestClassRunner.h"
#include "TestRunners/MultiTestClassRunner.cpp"
#include "TestRunners/NoOpTestClassRunner.h"
#include "TestRunners/NoOpTestClassRunner.cpp"
#include "TestRunners/PreamblePrinter.h"
#include "TestRunners/PreamblePrinter.cpp"
#include "TestRunners/RunTests.h"
#include "TestRunners/RunTests.cpp"
#include "TestRunners/SpecificTestClassRunner.h"
#include "TestRunners/TestClassRunner.h"
#include "TestRunners/TestClassRunner.cpp"
#include "TestRunners/TestRunner.h"
#include "TestRunners/TestRunner.cpp"
#include "TestRunners/TryCatchCaller.h"
#include "TestRunners/TryCatchCaller.cpp"

#include "Tests/FullTestName.h"
#include "Tests/FullTestName.cpp"
#include "Tests/NewDeleteTest.h"
#include "Tests/NormalTest.h"
#include "Tests/SpecSectionTestNXN.h"
#include "Tests/Test.h"
#include "Tests/Test.cpp"
#include "Tests/Test1X1ThroughTest10X10.h"
#include "Tests/TestClass.h"
#include "Tests/TestNXN.h"

#include "ToStringer/SFINAE/has_ostream_left_shift.h"
#include "ToStringer/SFINAE/has_to_string.h"
#include "ToStringer/SFINAE/has_ZenUnitPrinter.h"
#include "ToStringer/ZenUnitPrinter/MapZenUnitPrinter.h"
#include "ToStringer/ZenUnitPrinter/SetZenUnitPrinter.h"
#include "ToStringer/ZenUnitPrinter/VectorZenUnitPrinter.h"
#include "ToStringer/is_quoted_when_printed.h"
#include "ToStringer/ToStringer.h"
#include "ToStringer/ToStringer.cpp"

#include "Utils/Concurrency/Futurist.h"
#include "Utils/Concurrency/VoidFuture.h"
#include "Utils/Concurrency/VoidFuture.cpp"
#include "Utils/Iteration/ExtraArgMemberForEacher.h"
#include "Utils/Iteration/TwoExtraArgsForEacher.h"
#include "Utils/Iteration/MemberForEacher.h"
#include "Utils/Iteration/ExtraArgMemberForEacher.h"
#include "Utils/Iteration/Transformer.h"
#include "Utils/Time/Stopwatch.h"
#include "Utils/Time/Stopwatch.cpp"
#include "Utils/Time/Watch.h"
#include "Utils/Time/Watch.cpp"
#include "Utils/AssertTrue.h"
#include "Utils/AssertTrue.cpp"
#include "Utils/FileLine.h"
#include "Utils/FileLine.cpp"
#include "Utils/FileLiner.h"
#include "Utils/FileLiner.cpp"
#include "Utils/IgnoredMSVCWallWarnings.h"
#include "Utils/Map.h"
#include "Utils/NA.h"
#include "Utils/PmfToken.h"
#include "Utils/Random.h"
#include "Utils/Random.cpp"
#include "Utils/Set.h"
#include "Utils/Sorter.h"
#include "Utils/StringUtil.h"
#include "Utils/StringUtil.cpp"
#include "Utils/Tuple.h"
#include "Utils/Type.h"
#include "Utils/Type.cpp"
#include "Utils/Vector.h"
#include "Utils/Vector.cpp"
#include "Utils/VRText.h"
